#============================================================================
# Configure Main Scheduler Properties
#============================================================================
#在集群中每个实例都必须有一个唯一的instanceId，但是应该有一个相同的instanceName
org.quartz.scheduler.instanceName = TestScheduler
org.quartz.scheduler.instanceId = AUTO
#org.quartz.scheduler.skipUpdateCheck = true
#============================================================================
# Configure ThreadPool
#============================================================================

#定义线程池，SimpleThreadPool这个线程池只是简单地在它的池中保持固定数量的线程，不增长也不缩小。但是它非常健壮且经过良好的测试，差不多每个Quartz用户都使用这个池。

org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadCount = 3   
#最多只能有3个线程并发
org.quartz.threadPool.threadPriority = 5

#============================================================================
# Configure JobStore  配置数据存储的方式#============================================================================

#一个触发器被认定为“misfired”之前，调度器所能容忍的毫秒数

org.quartz.jobStore.misfireThreshold = 60000

#1.所有的Quartz数据,例如Job和Trigger的细节信息被存储在内存（数据库）中。

#org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore

org.quartz.jobStore.class = org.quartz.simpl.JDBCJobStore

#2.配置事务。JobStoreTX来让Quartz帮你管理事务（这是最普遍的选择）。
#如果想让Quartz同其他的事务协同工作（例如：J2EE应用服务器中的事务），那么你需要使用JobStoreCMT，这样，Quartz就会让应用服务器容器来管理事务

org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX

#org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreCMT

#3.DriverDelegate负责做指定数据库的所有JDBC工作.

#如果数据库没有其他指定的代理，那么就试用代理StdJDBCDelegate。
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate

#为了指示JDBCJobStore所有的JobDataMaps中的值都是字符串，并且能以“名字-值”对的方式存储而不是以复杂对象的序列化形式存储在BLOB字段中，应设置值为”true”(这是缺省的方式)。

org.quartz.jobStore.useProperties = true
#配置数据源源的名数、据库表前前缀
org.quartz.jobStore.dataSource = myDS
org.quartz.jobStore.tablePrefix = QRTZ_

#是否集群  负载均衡和容错
#org.quartz.jobStore.isClustered = false

#============================================================================
# Configure Datasources  配置数据源
#============================================================================

org.quartz.dataSource.myDS.driver =  com.mysql.jdbc.Driver
org.quartz.dataSource.myDS.URL = jdbc:mysql://localhost:3306/quartz?useUnicode=true&characterEncoding=utf8
org.quartz.dataSource.myDS.user = jet 
org.quartz.dataSource.myDS.password = 12345678
#org.quartz.dataSource.myDS.user = jhouse
#org.quartz.dataSource.myDS.password =

#如果Scheduler非常忙（比如，执行的任务数量差不多和线程池的数量相同，那么你需要正确地配置DataSource的连接数量为线程池数量+1）
#org.quartz.dataSource.myDS.maxConnections = 5

#============================================================================
# Configure Plugins
#============================================================================
#org.quartz.plugin.triggHistory.class = org.quartz.plugins.history.LoggingJobHistoryPlugin
#org.quartz.plugin.jobInitializer.class = org.quartz.plugins.xml.XMLSchedulingDataProcessorPlugin
#org.quartz.plugin.jobInitializer.fileNames = quartz_data.xml
#org.quartz.plugin.jobInitializer.failOnFileNotFound = true
#org.quartz.plugin.jobInitializer.scanInterval = 120
#org.quartz.plugin.jobInitializer.wrapInUserTransaction =false